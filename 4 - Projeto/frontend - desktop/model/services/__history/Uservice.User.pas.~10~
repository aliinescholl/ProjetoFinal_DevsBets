unit Uservice.User;

interface

uses
  UEntity.Users, UService.Base;

type
  TServiceUser = class(TServiceBase)
    private
      FUser: TUser;
    public
      constructor Create; overload;
      constructor Create(aUser: TUser); overload;
      destructor Destroy; override;

      procedure Registrar; override;
      procedure Listar; override;
      procedure Excluir; override;

      function ObterRegistro(const aId:Integer):TObject; override;
  end;

implementation

uses
  REST.Types,
  System.JSON,
  UUtils.Constants,
  System.SysUtils,
  System.Classes, FireDAC.comp.Client, Dataset.Serialize;

{ TServiceUser }

constructor TServiceUser.Create;
begin
  Inherited Create;
end;

constructor TServiceUser.Create(aUser: TUser);
begin
  FUser := aUser;

  Self.Create;
end;

destructor TServiceUser.Destroy;
begin
  FreeAndNil(Fuser);
  inherited;
end;

procedure TServiceUser.Excluir;
begin
  inherited;

end;

procedure TServiceUser.Listar;
begin
  inherited;

end;

function TServiceUser.ObterRegistro(const aId: Integer): TObject;
begin

end;

procedure TServiceUser.Registrar;
begin
  inherited;

end;

end.
