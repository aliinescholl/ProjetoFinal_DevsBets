unit UfraTeams;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, 
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  FMX.ListView.Types, FMX.ListView.Appearances, FMX.ListView.Adapters.Base,
  FMX.Controls.Presentation, FMX.ListView, FMX.Objects, FMX.Layouts, UEntity.Teams;

type
  TFraTeam = class(TFrame)
    RectPrincipal: TRectangle;
    lytPrincipal: TLayout;
    Image1: TImage;
    LstTimes: TListView;
    rectToolbar: TRectangle;
    RectExcluir: TRectangle;
    RectNovo: TRectangle;
    Label2: TLabel;
    Label1: TLabel;
  private
    { Private declarations }
   procedure AbrirTeamRegistry;
   procedure CarregarRegistros;
   procedure ExcluirRegistro;
   procedure PreencherTeam(aTeam: TTeam);
  public
    { Public declarations }
   constructor Create(aOwner: TComponent); override;
  end;

var
  fraTeam: TFraTeam;

implementation

{$R *.fmx}

uses
//  UFraTeam.Registry,
  UService.intf,
  UService.Team;

{ TFraTeam }

procedure TFraTeam.AbrirTeamRegistry;
begin
  if not(FraTeamRegistry) then
   FraTeamRegistry := TFraTeamRegistry.Create(application);

   FraTeamRegistry.Align := TAlignLayout.Center;

   Self.Parent.AddObject(FraTeamRegistry);
   FreeAndNil(FraTeam);
end;

procedure TFraTeam.CarregarRegistros;
var
  xServiceTeam: IService;
  xTeam: TTeam;
begin
  LstTimes.Items.Clear;

  xServiceTeam := TServiceTeam.Create;
  xServiceTeam.Listar;

  for xTeam in TServiceTeam(xServiceTeam).Teams do
    Self.PreencherTeam(xTeam);
end;

constructor TFraTeam.Create(aOwner: TComponent);
begin
  inherited;

end;

procedure TFraTeam.ExcluirRegistro;
begin

end;

procedure TFraTeam.PreencherTeam(aTeam: TTeam);
begin

end;

end.
