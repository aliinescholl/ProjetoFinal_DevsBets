unit UController.Bet;

interface

uses
  Horse,
  GBSwagger.Path.Attributes,
  UController.Base,
  UEntity.Users;

type
  [SwagPath('bets', 'Apostas')]
  TControllerBets = class(TControllerBase)
    private
    public
    [SwagGET('Listar Apostas', True)]
    [SwagResponse(200, TUser, 'Informações da Aposta', True)]
    [SwagResponse(404)]
    class procedure Gets(Req: THorseRequest; Res: THorseResponse; Next: TProc); override;

    [SwagGET('{id}', 'Procurar uma Aposta', True)]
    [SwagParamPath('id', 'id da aposta')]
    [SwagResponse(200, TUser, 'Informações da aposta', True)]
    [SwagResponse(404)]
    class procedure Get(Req: THorseRequest; Res: THorseResponse; Next: TProc); override;

    [SwagPOST('Adicionar nova aposta')]
    [SwagParamBody('Informações da aposta', TUser)]
    [SwagResponse(201)]
    [SwagResponse(400)]
    class procedure Post(Req: THorseRequest; Res: THorseResponse; Next: TProc); override;

    [SwagPOST('id','Deletar uma aposta')]
    [SwagParamPath('id', 'Id da aposta')]
    [SwagResponse(204)]
    [SwagResponse(400)]
    [SwagResponse(404)]
    class procedure Delete(Req: THorseRequest; Res: THorseResponse; Next: TProc); override;
  end;

implementation

{ TControllerBets }

uses
  UDAO.Bets,
  UDAO.Intf;

class procedure TControllerBets.Delete(Req: THorseRequest; Res: THorseResponse;
  Next: TProc);
begin
  FDAO := TDAOBets.Create;
  inherited;
end;

class procedure TControllerBets.Get(Req: THorseRequest; Res: THorseResponse;
  Next: TProc);
begin
  FDAO := TDAOBets.Create;
  inherited;
end;

class procedure TControllerBets.Gets(Req: THorseRequest; Res: THorseResponse;
  Next: TProc);
begin
  FDAO := TDAOBets.Create;
  inherited;
end;

class procedure TControllerBets.Post(Req: THorseRequest; Res: THorseResponse;
  Next: TProc);
begin
  inherited;
  FDAO := TDAOBets.Create;
end;

end.
